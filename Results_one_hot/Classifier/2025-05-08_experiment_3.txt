Description:
Compare classic ML models on full data.
For model:SVC(), parameters: {'model__C': (0.1, 1, 10), 'model__kernel': ['rbf'], 'model__probability': [True]}
For model:KNeighborsClassifier(), parameters: {'model__n_neighbors': (1, 2, 5, 7, 10, 20, 50), 'model__weights': ('uniform', 'distance')}
For model:RandomForestClassifier(), parameters: {'model__max_depth': (2, 7, 20, 30), 'model__n_estimators': (50, 200, 400, 700, 1000)}
For model:MLPClassifier(), parameters: {'model__hidden_layer_sizes': (100, 200, 800, 1000), 'model__activation': ('logistic', 'relu'), 'model__alpha': (0, 0.0001)}
Best params for SVC():{'model__C': 1, 'model__kernel': 'rbf', 'model__probability': True}
Test ROC AUC for the best SVC() model 0.6354
Best params for KNeighborsClassifier():{'model__n_neighbors': 7, 'model__weights': 'distance'}
Test ROC AUC for the best KNeighborsClassifier() model 0.6419
Best params for RandomForestClassifier():{'model__max_depth': 20, 'model__n_estimators': 700}
Test ROC AUC for the best RandomForestClassifier() model 0.6277
Best params for MLPClassifier():{'model__activation': 'logistic', 'model__alpha': 0, 'model__hidden_layer_sizes': 800}
Test ROC AUC for the best MLPClassifier() model 0.6237
