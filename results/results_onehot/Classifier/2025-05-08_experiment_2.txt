Description:
Compare classic ML models on reduced data (drop columns with hight correlation(>0.9)).
For model:SVC(), parameters: {'model__C': (0.1, 1, 10), 'model__kernel': ['rbf'], 'model__probability': [True]}
For model:AdaBoostClassifier(), parameters: {'model__n_estimators': (10, 50, 100)}
For model:KNeighborsClassifier(), parameters: {'model__n_neighbors': (1, 2, 5, 7, 10, 20, 50), 'model__weights': ('uniform', 'distance')}
For model:DecisionTreeClassifier(), parameters: {'model__max_depth': (5, 10, 20, 50), 'model__min_samples_split': (2, 10, 50, 100)}
For model:GaussianNB(), parameters: {}
For model:RandomForestClassifier(), parameters: {'model__max_depth': (2, 7, 20, 30), 'model__n_estimators': (50, 200, 400, 700, 1000)}
For model:XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=None, ...), parameters: {'model__max_depth': (5, 10, 30), 'model__grow_policy': ('depthwise', 'lossguide')}
For model:MLPClassifier(), parameters: {'model__hidden_layer_sizes': (100, 200, 800), 'model__activation': ('logistic', 'relu'), 'model__alpha': (0, 0.0001)}
Best params for SVC():{'model__C': 1, 'model__kernel': 'rbf', 'model__probability': True}
Test ROC AUC for the best SVC() model 0.633
Best params for AdaBoostClassifier():{'model__n_estimators': 10}
Test ROC AUC for the best AdaBoostClassifier() model 0.5116
Best params for KNeighborsClassifier():{'model__n_neighbors': 7, 'model__weights': 'distance'}
Test ROC AUC for the best KNeighborsClassifier() model 0.6423
Best params for DecisionTreeClassifier():{'model__max_depth': 10, 'model__min_samples_split': 100}
Test ROC AUC for the best DecisionTreeClassifier() model 0.5405
Best params for GaussianNB():{}
Test ROC AUC for the best GaussianNB() model 0.487
Best params for RandomForestClassifier():{'model__max_depth': 20, 'model__n_estimators': 1000}
Test ROC AUC for the best RandomForestClassifier() model 0.6264
Best params for XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=None, ...):{'model__grow_policy': 'depthwise', 'model__max_depth': 5}
Test ROC AUC for the best XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=None,
              num_parallel_tree=None, random_state=None, ...) model 0.5944
Best params for MLPClassifier():{'model__activation': 'relu', 'model__alpha': 0, 'model__hidden_layer_sizes': 800}
Test ROC AUC for the best MLPClassifier() model 0.6168
